{
  "publishedAt": "06-29-2025",
  "title": "Sitecore Marketplace - Quickstart",
  "content": "This guide describes how to start developing for the Sitecore Marketplace locally, by connecting a JavaScript/TypeScript app to Sitecore using the Marketplace SDK.\\\nThis guide will have you build an example app using Vite, however, the Sitecore Marketplace SDK is also compatible with Next.js.\\\nW﻿e will focus on building a framework app that can work within XM Cloud pages. If you want to run the app as a standalone marketplace app, you will first need to obtain an App ID from Sitecore.\n\n## Prerequisites\n\n* Node.js 18+ or 20+\n\n## Create application\n\nF﻿irst, scaffold a new Vite app with the following command.\n\n```powershell\nnpm create vite@latest\n```\n\nWhen prompted, select the following options:\n\n* Framework: React\n* Variant: TypeScript\n\nNext, install the required Sitecore SDK libraries\n\n```powershell\nnpm install @sitecore-marketplace-sdk/client\n```\n\nWe will create a new component that, upon the press of a button, will retrieve and display information about the logged in user context. Create a new component file under /src/components/UserInfo.tsx with the following code\n\n```typescript\nimport { useEffect, useState, useRef } from \"react\";\nimport { ClientSDK } from \"@sitecore-marketplace-sdk/client\";\n\nconst defaultHostURL = \"<YOUR_HOST_URL>\";\n/* Host URL options:\n- XM Cloud full page: https://xmapps.sitecorecloud.io\n- XM Cloud page builder: https://pages.sitecorecloud.io\n- Cloud Portal: https://marketplace-app.sitecorecloud.io\n*/\n\nexport default function UserInfoComponent() {\n  const [client, setClient] = useState(false);\n  const [user, setUser] = useState({});\n\n  const clientRef = useRef<ClientSDK | null>(null);\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const origin = (queryParams.get(\"origin\") as string) || defaultHostURL;\n\n    // Initialize the Marketplace SDK:\n    const init = async () => {\n      try {\n        const client = await ClientSDK.init({\n          origin,\n          target: window.parent,\n          // Extend Client SDK with the `xmc` package:\n          modules: [],\n        });\n        clientRef.current = client;\n        setClient(true);\n      } catch (error) {\n        console.error(\"Client initialization failed:\", error);\n      }\n    };\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (client) {\n      return () => {\n        clientRef.current?.destroy();\n        clientRef.current = null;\n        setClient(false);\n      };\n    }\n  }, [client]);\n\n  // Get the details of the user currently logged in to Sitecore:\n  const fetchUser = async () => {\n    const user = await clientRef.current!.query(\"host.user\");\n    if (user?.data) setUser(user.data);\n  };\n\n  return (\n    <>\n      <div>\n        <button onClick={fetchUser}>Get user details</button>\n        <pre>{JSON.stringify(user, null, 2)}</pre>\n      </div>\n    </>\n  );\n}\n```\n\nChange the value of defaultHostURL on line 4 with one of the following options based on where you want to run the App;\n\n* XM Cloud full page: https://xmapps.sitecorecloud.io\n* X﻿M Cloud page builder: https://pages.sitecorecloud.io\n* Cloud Portal: https://marketplace-app.sitecorecloud.io\n\n```typescript\nconst defaultHostURL = \"https://pages.sitecorecloud.io\";\n```\n\nNext, include the new component in the App.tsx of your React application. Change the contents of the App.tsx with the following code:\n\n```typescript\nimport './App.css'\nimport UserInfoComponent from './components/UserInfo'\n\nexport default function App() {\n\n  return (\n    <>\n      <h1>Vite + React</h1>\n      <UserInfoComponent />\n    </>\n  )\n}\n```\n\nStart your app by entering the following command in your terminal:\n\n```powershell\nnpm run dev\n```\n\n## Test your Marketplace App\n\nTo test your Marketplace App, open the Host URL where you want to run the App (same value as set in defaultHostURL).\n\nOpen the browser's console and run the below JavaScript snippet. Make sure the replace all the variables with values for your demo environment.\n\n* APP_ID = The application ID as provided by Sitecore (for testing purposes as an extension in XM Cloud and Pages you can use a random value)\n* APP_TYPE = Use 'extension' for XM Cloud and Pages applications and 'portal' for Sitecore Portal applications\n* YOUR_APP_PORT = The port your Vite application is running on\n* YOUR_TENANT_NAME = The Tenant Name of your XM Cloud project\n* YOUR_TENANT_ID = The Tenant ID of your XM Cloud project\n* YOUR_LIVE_CONTEXT_ID = The Live context ID as found in the Environment's Developer Settings\n* YOUR_PREVIEW_CONTEXT_ID = The Preview context ID as found in the Environment's Developer Settings\n\nThis script works for Page builder ([https://pages.sitecorecloud.io](https://pages.sitecorecloud.io/)) and Full Page ([https://xmapps.sitecorecloud.io](https://xmapps.sitecorecloud.io/)):\n\n```javascript\nlocalStorage.setItem(\n  \"Sitecore.Marketplace.LocalApps\",\n  JSON.stringify([\n    {\n      application: {\n        id: \"<APP_ID>\",\n        name: \"My Marketplace App\",\n        type: \"<APP_TYPE>\",\n        url: \"http://localhost:<YOUR_APP_PORT>\",\n        iconUrl: \"https://www.sitecore.com/static/favicon.ico\",\n      },\n      resources: [\n        {\n          resourceId: \"xmcloud\",\n          tenantName: \"<YOUR_TENANT_NAME>\",\n          tenantId: \"<YOUR_TENANT_ID>\",\n          context: {\n            live: \"<YOUR_LIVE_CONTEXT_ID>\",\n            preview: \"<YOUR_PREVIEW_CONTEXT_ID>\",\n          },\n        },\n      ],\n    },\n  ])\n);\nwindow.location.reload();\n```\n\nThe page will reload, and you will now see a puzzle piece icon in the top right corner of the page, allowing you to open the Marketplace App in the designated page area. This is how it is going to look like in XMC Page Builder:\n\n![Example Sitecore Marketplace App](/images/uploads/sc-marketplace-example.png)\n\n### Retrieving your Tenant ID and Name\n\nAt time of writing, there is no easy way to retrieve the Tenant ID and Name values for your XM Cloud project.\\\nTo retrieve them:\n\n1. Open the XM Cloud Dashboard for your Environment with the browser inspector open.\n2. In the network tab, search for a GET request to <https://platform-inventory.sitecorecloud.io/api/inventory/v1/tenants>\n3. The response of this request will contain the values you need, for example:\n\n   ```json\n   {\n       \"id\": \"[Tenant ID]\",\n       \"systemId\": \"...\",\n       \"name\": \"[Tenant Name]\",\n       \"displayName\": \"SC Marketplace / DEV\",\n       \"organizationId\": \"org_...\",\n       \"annotations\": {\n           \"URL\": \"https://xmc-etc.sitecorecloud.io/sitecore\",\n           \"XMCloud.ProjectName\": \"SC Marketplace\",\n           \"XMCloud.ProjectId\": \"...\",\n           \"XMCloud.EnvironmentName\": \"...\",\n           \"XMCloud.CustomerEnvironmentType\": \"nonprod\",\n           \"XMCloud.CDPEmbeddedTenantID\": \"...\",\n           \"TenantClaims.cdp_client_key\": \"...\",\n           \"TenantClaims.AIEmbeddedTenantID\": \"...\",\n           \"XMCloud.EnvironmentId\": \"...\"\n       },\n       \"labels\": {\n           \"CustomerEnvironmentType\": \"nonprod\",\n           \"Environment\": \"production\",\n           \"ProductCode\": \"XMCloud\",\n           \"Region\": \"West Europe\",\n           \"RegionCode\": \"euw\"\n       },\n       \"state\": \"Active\",\n       \"region\": null\n   }\n   ```\n4. The \"id\" and \"name\" properties are the Tenant ID and Tenant Name values respectively\n\n## Next steps\n\nYour app is now running and connected to the Sitecore Portal. Now you can continue developing your app by building out queries using the client package or explore installing the xmc module to work with the XM Cloud APIs.",
  "seoDescription": "A guide describing how to build a new Sitecore Marketplace app using Vite and TypeScript."
}
