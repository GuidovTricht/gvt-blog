{
  "publishedAt": "08-27-2022",
  "title": "Sitecore scaled environment loses session",
  "content": "Last week I came across a tricky issue which took me several days to fix.\n\nWe had created a login functionality where a user would be logged in against a 3rd party service, after which we created a Virtual User in Sitecore to authenticate the user with the Sitecore platform.\\\nEverything worked fine (users were created and roles were properly assigned), until we reached an environment which was scaled and had multiple Content Delivery servers. When a logged in user would hit a different CD then which it authenticated against, it would lose its session.\\\nThe full setup is built using Sitecore Headless (.NET SDK version) and hosted in Kubernetes. Configuring sticky session on the CDs was therefor not a straightforward 'fix' for this issue as it was the .NET frontend application performing the API requests to the CDs instead of the end-users' browser itself.\n\nDuring our investigations we noticed the following symptoms:\n\n* On login the user would get a \"ASP.NET_SessionId\" cookie\n* The user did not get the \".ASPXAUTH\" cookie as we were used to on older projects, even though Sitecore was configured to use Forms authentication\n* User data was successfully created and pushed to the ClientData table in the Web database upon login\n* No errors were showing in the logs, only the fact that the Layout Service returned a 401 status code on different CDs than the one used to login"
}